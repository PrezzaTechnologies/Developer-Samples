//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ListUsers.UserManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfstring", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfUserDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfUserDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserData ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserData ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EscapedUniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GroupMembershipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.SimpleNameValueCollection ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RoleMembershipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationType {
            get {
                return this.AuthenticationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationTypeField, value) != true)) {
                    this.AuthenticationTypeField = value;
                    this.RaisePropertyChanged("AuthenticationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EscapedUniqueIdentifier {
            get {
                return this.EscapedUniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.EscapedUniqueIdentifierField, value) != true)) {
                    this.EscapedUniqueIdentifierField = value;
                    this.RaisePropertyChanged("EscapedUniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] GroupMemberships {
            get {
                return this.GroupMembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupMembershipsField, value) != true)) {
                    this.GroupMembershipsField = value;
                    this.RaisePropertyChanged("GroupMemberships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInList {
            get {
                return this.IsInListField;
            }
            set {
                if ((this.IsInListField.Equals(value) != true)) {
                    this.IsInListField = value;
                    this.RaisePropertyChanged("IsInList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockedOut {
            get {
                return this.LockedOutField;
            }
            set {
                if ((this.LockedOutField.Equals(value) != true)) {
                    this.LockedOutField = value;
                    this.RaisePropertyChanged("LockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.SimpleNameValueCollection Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RoleMemberships {
            get {
                return this.RoleMembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleMembershipsField, value) != true)) {
                    this.RoleMembershipsField = value;
                    this.RaisePropertyChanged("RoleMemberships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueIdentifier {
            get {
                return this.UniqueIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdentifierField, value) != true)) {
                    this.UniqueIdentifierField = value;
                    this.RaisePropertyChanged("UniqueIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleNameValueCollection", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class SimpleNameValueCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.SimpleNameValue[] NameValueListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.SimpleNameValue[] NameValueList {
            get {
                return this.NameValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.NameValueListField, value) != true)) {
                    this.NameValueListField = value;
                    this.RaisePropertyChanged("NameValueList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleNameValue", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class SimpleNameValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.PagedListResultOfArrayOfUserDataVUqw3SxC ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.PagedListResultOfArrayOfUserDataVUqw3SxC ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedListResultOfArrayOfUserDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class PagedListResultOfArrayOfUserDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserData[] ResultPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserData[] ResultPage {
            get {
                return this.ResultPageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultPageField, value) != true)) {
                    this.ResultPageField = value;
                    this.RaisePropertyChanged("ResultPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItemCount {
            get {
                return this.TotalItemCountField;
            }
            set {
                if ((this.TotalItemCountField.Equals(value) != true)) {
                    this.TotalItemCountField = value;
                    this.RaisePropertyChanged("TotalItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.PagedListResultOfArrayOfstringuHEDJ7Dj ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.PagedListResultOfArrayOfstringuHEDJ7Dj ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedListResultOfArrayOfstringuHEDJ7Dj", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class PagedListResultOfArrayOfstringuHEDJ7Dj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ResultPage {
            get {
                return this.ResultPageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultPageField, value) != true)) {
                    this.ResultPageField = value;
                    this.RaisePropertyChanged("ResultPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItemCount {
            get {
                return this.TotalItemCountField;
            }
            set {
                if ((this.TotalItemCountField.Equals(value) != true)) {
                    this.TotalItemCountField = value;
                    this.RaisePropertyChanged("TotalItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.SimpleNameValueCollection ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.SimpleNameValueCollection ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfanyType", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfUserDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.UserData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.SimpleNameValueCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.SimpleNameValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.SimpleNameValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.PagedListResultOfArrayOfUserDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.UserData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.PagedListResultOfArrayOfstringuHEDJ7Dj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfboolean))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfRoleDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.RoleData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.RoleData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.PagedListResultOfArrayOfUserGroupDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.UserGroupData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.UserGroupData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfintuHEDJ7Dj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfAclEntryVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.AclEntry[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.AclEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.GroupedResultOfUserDataVUqw3SxC[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.GroupedResultOfUserDataVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.GroupedResultOfUserGroupDataVUqw3SxC[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListUsers.UserManagementService.GroupedResultOfUserGroupDataVUqw3SxC))]
    public partial class ServiceOperationResultOfanyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((this.ResultDataField.Equals(value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfstringuHEDJ7Dj", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfstringuHEDJ7Dj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfRoleDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfRoleDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.RoleData[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.RoleData[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleData", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class RoleData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.PagedListResultOfArrayOfUserGroupDataVUqw3SxC ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.PagedListResultOfArrayOfUserGroupDataVUqw3SxC ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedListResultOfArrayOfUserGroupDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class PagedListResultOfArrayOfUserGroupDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserGroupData[] ResultPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserGroupData[] ResultPage {
            get {
                return this.ResultPageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultPageField, value) != true)) {
                    this.ResultPageField = value;
                    this.RaisePropertyChanged("ResultPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItemCount {
            get {
                return this.TotalItemCountField;
            }
            set {
                if ((this.TotalItemCountField.Equals(value) != true)) {
                    this.TotalItemCountField = value;
                    this.RaisePropertyChanged("TotalItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroupData", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class UserGroupData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CanCopyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CanDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DatabaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CanCopy {
            get {
                return this.CanCopyField;
            }
            set {
                if ((this.CanCopyField.Equals(value) != true)) {
                    this.CanCopyField = value;
                    this.RaisePropertyChanged("CanCopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CanDelete {
            get {
                return this.CanDeleteField;
            }
            set {
                if ((this.CanDeleteField.Equals(value) != true)) {
                    this.CanDeleteField = value;
                    this.RaisePropertyChanged("CanDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DatabaseId {
            get {
                return this.DatabaseIdField;
            }
            set {
                if ((this.DatabaseIdField.Equals(value) != true)) {
                    this.DatabaseIdField = value;
                    this.RaisePropertyChanged("DatabaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberCount {
            get {
                return this.MemberCountField;
            }
            set {
                if ((this.MemberCountField.Equals(value) != true)) {
                    this.MemberCountField = value;
                    this.RaisePropertyChanged("MemberCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfint", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((this.ResultDataField.Equals(value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfintuHEDJ7Dj", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfintuHEDJ7Dj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfAclEntryVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfAclEntryVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.AclEntry[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.AclEntry[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AclEntry", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class AclEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AclPolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullEntryIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortEntryIdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AclPolicyId {
            get {
                return this.AclPolicyIdField;
            }
            set {
                if ((this.AclPolicyIdField.Equals(value) != true)) {
                    this.AclPolicyIdField = value;
                    this.RaisePropertyChanged("AclPolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryIdentifier {
            get {
                return this.EntryIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryIdentifierField, value) != true)) {
                    this.EntryIdentifierField = value;
                    this.RaisePropertyChanged("EntryIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryTypeField, value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullEntryIdentifier {
            get {
                return this.FullEntryIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FullEntryIdentifierField, value) != true)) {
                    this.FullEntryIdentifierField = value;
                    this.RaisePropertyChanged("FullEntryIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInList {
            get {
                return this.IsInListField;
            }
            set {
                if ((this.IsInListField.Equals(value) != true)) {
                    this.IsInListField = value;
                    this.RaisePropertyChanged("IsInList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortEntryIdentifier {
            get {
                return this.ShortEntryIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortEntryIdentifierField, value) != true)) {
                    this.ShortEntryIdentifierField = value;
                    this.RaisePropertyChanged("ShortEntryIdentifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfUserGroupDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfUserGroupDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserGroupData ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserGroupData ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.GroupedResultOfUserDataVUqw3SxC[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.GroupedResultOfUserDataVUqw3SxC[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupedResultOfUserDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class GroupedResultOfUserDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserData[] GroupResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupField {
            get {
                return this.GroupFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupFieldField, value) != true)) {
                    this.GroupFieldField = value;
                    this.RaisePropertyChanged("GroupField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupKey {
            get {
                return this.GroupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupKeyField, value) != true)) {
                    this.GroupKeyField = value;
                    this.RaisePropertyChanged("GroupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserData[] GroupResults {
            get {
                return this.GroupResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupResultsField, value) != true)) {
                    this.GroupResultsField = value;
                    this.RaisePropertyChanged("GroupResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CallSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.GroupedResultOfUserGroupDataVUqw3SxC[] ResultDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CallSuccess {
            get {
                return this.CallSuccessField;
            }
            set {
                if ((this.CallSuccessField.Equals(value) != true)) {
                    this.CallSuccessField = value;
                    this.RaisePropertyChanged("CallSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureExceptionType {
            get {
                return this.FailureExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureExceptionTypeField, value) != true)) {
                    this.FailureExceptionTypeField = value;
                    this.RaisePropertyChanged("FailureExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.GroupedResultOfUserGroupDataVUqw3SxC[] ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupedResultOfUserGroupDataVUqw3SxC", Namespace="http://schemas.datacontract.org/2004/07/Checkbox.Wcf.Services.Proxies")]
    [System.SerializableAttribute()]
    public partial class GroupedResultOfUserGroupDataVUqw3SxC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ListUsers.UserManagementService.UserGroupData[] GroupResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupField {
            get {
                return this.GroupFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupFieldField, value) != true)) {
                    this.GroupFieldField = value;
                    this.RaisePropertyChanged("GroupField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupKey {
            get {
                return this.GroupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupKeyField, value) != true)) {
                    this.GroupKeyField = value;
                    this.RaisePropertyChanged("GroupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ListUsers.UserManagementService.UserGroupData[] GroupResults {
            get {
                return this.GroupResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupResultsField, value) != true)) {
                    this.GroupResultsField = value;
                    this.RaisePropertyChanged("GroupResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementService.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AuthenticateUser", ReplyAction="http://tempuri.org/IUserManagementService/AuthenticateUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring AuthenticateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AuthenticateUser", ReplyAction="http://tempuri.org/IUserManagementService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> AuthenticateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserData", ReplyAction="http://tempuri.org/IUserManagementService/GetUserDataResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfUserDataVUqw3SxC GetUserData(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserData", ReplyAction="http://tempuri.org/IUserManagementService/GetUserDataResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserDataVUqw3SxC> GetUserDataAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsers(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersAsync(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersByPeriod", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersByPeriodResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsersByPeriod(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersByPeriod", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersByPeriodResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersByPeriodAsync(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersInRole", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersInRoleResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsersInRole(string authToken, string role, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersInRole", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersInRoleResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersInRoleAsync(string authToken, string role, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserIdentities", ReplyAction="http://tempuri.org/IUserManagementService/ListUserIdentitiesResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC ListUserIdentities(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserIdentities", ReplyAction="http://tempuri.org/IUserManagementService/ListUserIdentitiesResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC> ListUserIdentitiesAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/GetUserProfileResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC GetUserProfile(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/GetUserProfileResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC> GetUserProfileAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserProfileResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType UpdateUserProfile(string authToken, string uniqueIdentifier, ListUsers.UserManagementService.SimpleNameValueCollection profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserProfileResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> UpdateUserProfileAsync(string authToken, string uniqueIdentifier, ListUsers.UserManagementService.SimpleNameValueCollection profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring CreateUser(string authToken, string userName, string password, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> CreateUserAsync(string authToken, string userName, string password, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateNetworkUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateNetworkUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring CreateNetworkUser(string authToken, string userName, string domain, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateNetworkUser", ReplyAction="http://tempuri.org/IUserManagementService/CreateNetworkUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> CreateNetworkUserAsync(string authToken, string userName, string domain, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserEmailAddress", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserEmailAddressResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserEmailAddress(string authToken, string userIdentity, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserEmailAddress", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserEmailAddressResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserEmailAddressAsync(string authToken, string userIdentity, string newEmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserPassword", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserPasswordResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserPassword(string authToken, string userIdentity, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserPassword", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserPasswordResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserPasswordAsync(string authToken, string userIdentity, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserDomain", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserDomainResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring ChangeUserDomain(string authToken, string userName, string oldDomain, string newDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserDomain", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserDomainResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> ChangeUserDomainAsync(string authToken, string userName, string oldDomain, string newDomain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUser(string authToken, string uniqueIdentifier, bool deleteResponses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserAsync(string authToken, string uniqueIdentifier, bool deleteResponses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUsers", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUsersResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUsers(string authToken, string[] uniqueIdentifierList, bool deleteResponses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUsers", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUsersResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUsersAsync(string authToken, string[] uniqueIdentifierList, bool deleteResponses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteResponsesOfUsers", ReplyAction="http://tempuri.org/IUserManagementService/DeleteResponsesOfUsersResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteResponsesOfUsers(string authToken, string[] uniqueIdentifierList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteResponsesOfUsers", ReplyAction="http://tempuri.org/IUserManagementService/DeleteResponsesOfUsersResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteResponsesOfUsersAsync(string authToken, string[] uniqueIdentifierList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserProfileResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUserProfile(string authToken, string userIdentity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserProfile", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserProfileResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserProfileAsync(string authToken, string userIdentity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RenameUser", ReplyAction="http://tempuri.org/IUserManagementService/RenameUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring RenameUser(string authToken, string uniqueIdentifier, string newUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RenameUser", ReplyAction="http://tempuri.org/IUserManagementService/RenameUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> RenameUserAsync(string authToken, string uniqueIdentifier, string newUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UnlockUser", ReplyAction="http://tempuri.org/IUserManagementService/UnlockUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfboolean UnlockUser(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UnlockUser", ReplyAction="http://tempuri.org/IUserManagementService/UnlockUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> UnlockUserAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/LockUser", ReplyAction="http://tempuri.org/IUserManagementService/LockUserResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfboolean LockUser(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/LockUser", ReplyAction="http://tempuri.org/IUserManagementService/LockUserResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> LockUserAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UserExists", ReplyAction="http://tempuri.org/IUserManagementService/UserExistsResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfboolean UserExists(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UserExists", ReplyAction="http://tempuri.org/IUserManagementService/UserExistsResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> UserExistsAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserRoles", ReplyAction="http://tempuri.org/IUserManagementService/ListUserRolesResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListUserRoles(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserRoles", ReplyAction="http://tempuri.org/IUserManagementService/ListUserRolesResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListUserRolesAsync(string authToken, string uniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListAllAvailableUserRoles", ReplyAction="http://tempuri.org/IUserManagementService/ListAllAvailableUserRolesResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfRoleDataVUqw3SxC ListAllAvailableUserRoles(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListAllAvailableUserRoles", ReplyAction="http://tempuri.org/IUserManagementService/ListAllAvailableUserRolesResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfRoleDataVUqw3SxC> ListAllAvailableUserRolesAsync(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserToRole", ReplyAction="http://tempuri.org/IUserManagementService/AddUserToRoleResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUserToRole(string authToken, string uniqueIdentifier, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserToRole", ReplyAction="http://tempuri.org/IUserManagementService/AddUserToRoleResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUserToRoleAsync(string authToken, string uniqueIdentifier, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromRole", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromRoleResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromRole(string authToken, string uniqueIdentifier, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromRole", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromRoleResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromRoleAsync(string authToken, string uniqueIdentifier, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupsResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC ListUserGroups(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupsResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC> ListUserGroupsAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroupsByPeriod", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupsByPeriodResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC ListUserGroupsByPeriod(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroupsByPeriod", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupsByPeriodResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC> ListUserGroupsByPeriodAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfint CreateUserGroup(string authToken, string userGroupName, string userGroupDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/CreateUserGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfint> CreateUserGroupAsync(string authToken, string userGroupName, string userGroupDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CopyUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/CopyUserGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfint CopyUserGroup(string authToken, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CopyUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/CopyUserGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfint> CopyUserGroupAsync(string authToken, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CopyUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/CopyUserGroupsResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfintuHEDJ7Dj CopyUserGroups(string authToken, int[] groupIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CopyUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/CopyUserGroupsResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfintuHEDJ7Dj> CopyUserGroupsAsync(string authToken, int[] groupIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RenameUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/RenameUserGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfstring RenameUserGroup(string authToken, int groupId, string newGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RenameUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/RenameUserGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> RenameUserGroupAsync(string authToken, int groupId, string newGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserGroupDescription", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserGroupDescriptionResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserGroupDescription(string authToken, int groupId, string newGroupDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ChangeUserGroupDescription", ReplyAction="http://tempuri.org/IUserManagementService/ChangeUserGroupDescriptionResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserGroupDescriptionAsync(string authToken, int groupId, string newGroupDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUserGroup(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserGroupAsync(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserGroupsResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj DeleteUserGroups(string authToken, int[] databaseIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserGroups", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserGroupsResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> DeleteUserGroupsAsync(string authToken, int[] databaseIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUsersToGroup", ReplyAction="http://tempuri.org/IUserManagementService/AddUsersToGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUsersToGroup(string authToken, string[] userUniqueIdentifiers, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUsersToGroup", ReplyAction="http://tempuri.org/IUserManagementService/AddUsersToGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUsersToGroupAsync(string authToken, string[] userUniqueIdentifiers, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromGroup(string authToken, int groupDatabaseID, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromGroupAsync(string authToken, int groupDatabaseID, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUsersFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUsersFromGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUsersFromGroup(string authToken, int groupDatabaseID, string[] userUniqueIdentifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUsersFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUsersFromGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUsersFromGroupAsync(string authToken, int groupDatabaseID, string[] userUniqueIdentifiers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveAllUsersFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveAllUsersFromGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveAllUsersFromGroup(string authToken, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveAllUsersFromGroup", ReplyAction="http://tempuri.org/IUserManagementService/RemoveAllUsersFromGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveAllUsersFromGroupAsync(string authToken, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteAllGroupMembersFromCheckBox", ReplyAction="http://tempuri.org/IUserManagementService/DeleteAllGroupMembersFromCheckBoxRespon" +
            "se")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteAllGroupMembersFromCheckBox(string authToken, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteAllGroupMembersFromCheckBox", ReplyAction="http://tempuri.org/IUserManagementService/DeleteAllGroupMembersFromCheckBoxRespon" +
            "se")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteAllGroupMembersFromCheckBoxAsync(string authToken, int groupDatabaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SetGroupDefaultPolicyPermissions", ReplyAction="http://tempuri.org/IUserManagementService/SetGroupDefaultPolicyPermissionsRespons" +
            "e")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType SetGroupDefaultPolicyPermissions(string authToken, int databaseID, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SetGroupDefaultPolicyPermissions", ReplyAction="http://tempuri.org/IUserManagementService/SetGroupDefaultPolicyPermissionsRespons" +
            "e")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> SetGroupDefaultPolicyPermissionsAsync(string authToken, int databaseID, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserToGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/AddUserToGroupAccessListResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUserToGroupAccessList(string authToken, int securedGroupID, string userUnqiueIdentifier, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserToGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/AddUserToGroupAccessListResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUserToGroupAccessListAsync(string authToken, int securedGroupID, string userUnqiueIdentifier, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddGroupToGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/AddGroupToGroupAccessListResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType AddGroupToGroupAccessList(string authToken, int securedGroupID, int permissibleGroupID, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddGroupToGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/AddGroupToGroupAccessListResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddGroupToGroupAccessListAsync(string authToken, int securedGroupID, int permissibleGroupID, string[] permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromGroupAccessListResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromGroupAccessList(string authToken, int securedGroupId, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveUserFromGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/RemoveUserFromGroupAccessListResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromGroupAccessListAsync(string authToken, int securedGroupId, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveGroupFromGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/RemoveGroupFromGroupAccessListResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveGroupFromGroupAccessList(string authToken, int securedGroupID, int permissibleGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RemoveGroupFromGroupAccessList", ReplyAction="http://tempuri.org/IUserManagementService/RemoveGroupFromGroupAccessListResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveGroupFromGroupAccessListAsync(string authToken, int securedGroupID, int permissibleGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupDefaultPolicyPermissions", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupDefaultPolicyPermissionsRespon" +
            "se")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupDefaultPolicyPermissions(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupDefaultPolicyPermissions", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupDefaultPolicyPermissionsRespon" +
            "se")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupDefaultPolicyPermissionsAsync(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListAllGroupAccessListEntries", ReplyAction="http://tempuri.org/IUserManagementService/ListAllGroupAccessListEntriesResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfAclEntryVUqw3SxC ListAllGroupAccessListEntries(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListAllGroupAccessListEntries", ReplyAction="http://tempuri.org/IUserManagementService/ListAllGroupAccessListEntriesResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfAclEntryVUqw3SxC> ListAllGroupAccessListEntriesAsync(string authToken, int databaseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForUser", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForUserRe" +
            "sponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupAccessListPermissionsForUser(string authToken, int securedGroupID, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForUser", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForUserRe" +
            "sponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupAccessListPermissionsForUserAsync(string authToken, int securedGroupID, string userUniqueIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForGroupR" +
            "esponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupAccessListPermissionsForGroup(string authToken, int securedGroupID, int permissibleGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListGroupAccessListPermissionsForGroupR" +
            "esponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupAccessListPermissionsForGroupAsync(string authToken, int securedGroupID, int permissibleGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserGroupByName", ReplyAction="http://tempuri.org/IUserManagementService/GetUserGroupByNameResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC GetUserGroupByName(string authToken, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserGroupByName", ReplyAction="http://tempuri.org/IUserManagementService/GetUserGroupByNameResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC> GetUserGroupByNameAsync(string authToken, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserGroupById", ReplyAction="http://tempuri.org/IUserManagementService/GetUserGroupByIdResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC GetUserGroupById(string authToken, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserGroupById", ReplyAction="http://tempuri.org/IUserManagementService/GetUserGroupByIdResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC> GetUserGroupByIdAsync(string authToken, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroupMembers", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupMembersResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListUserGroupMembers(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUserGroupMembers", ReplyAction="http://tempuri.org/IUserManagementService/ListUserGroupMembersResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListUserGroupMembersAsync(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUsersNotInGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListUsersNotInGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListUsersNotInGroup(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListUsersNotInGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListUsersNotInGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListUsersNotInGroupAsync(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListPotentialUsersForNewGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListPotentialUsersForNewGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListPotentialUsersForNewGroup(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListPotentialUsersForNewGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListPotentialUsersForNewGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListPotentialUsersForNewGroupAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListCurrentUsersForNewGroup(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroup", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListCurrentUsersForNewGroupAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupAddUser", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupAddUserRespo" +
            "nse")]
        ListUsers.UserManagementService.ServiceOperationResultOfboolean ListCurrentUsersForNewGroupAddUser(string authToken, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupAddUser", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupAddUserRespo" +
            "nse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> ListCurrentUsersForNewGroupAddUserAsync(string authToken, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupRemoveUser", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupRemoveUserRe" +
            "sponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfboolean ListCurrentUsersForNewGroupRemoveUser(string authToken, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupRemoveUser", ReplyAction="http://tempuri.org/IUserManagementService/ListCurrentUsersForNewGroupRemoveUserRe" +
            "sponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> ListCurrentUsersForNewGroupRemoveUserAsync(string authToken, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SearchUsers", ReplyAction="http://tempuri.org/IUserManagementService/SearchUsersResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC SearchUsers(string authToken, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SearchUsers", ReplyAction="http://tempuri.org/IUserManagementService/SearchUsersResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC> SearchUsersAsync(string authToken, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SearchGroups", ReplyAction="http://tempuri.org/IUserManagementService/SearchGroupsResponse")]
        ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC SearchGroups(string authToken, string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/SearchGroups", ReplyAction="http://tempuri.org/IUserManagementService/SearchGroupsResponse")]
        System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC> SearchGroupsAsync(string authToken, string searchTerm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : ListUsers.UserManagementService.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<ListUsers.UserManagementService.IUserManagementService>, ListUsers.UserManagementService.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring AuthenticateUser(string userName, string password) {
            return base.Channel.AuthenticateUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> AuthenticateUserAsync(string userName, string password) {
            return base.Channel.AuthenticateUserAsync(userName, password);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfUserDataVUqw3SxC GetUserData(string authToken, string uniqueIdentifier) {
            return base.Channel.GetUserData(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserDataVUqw3SxC> GetUserDataAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.GetUserDataAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsers(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.GetUsers(authToken, provider, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersAsync(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.GetUsersAsync(authToken, provider, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsersByPeriod(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName) {
            return base.Channel.GetUsersByPeriod(authToken, provider, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue, period, dateFieldName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersByPeriodAsync(string authToken, string provider, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName) {
            return base.Channel.GetUsersByPeriodAsync(authToken, provider, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue, period, dateFieldName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC GetUsersInRole(string authToken, string role, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.GetUsersInRole(authToken, role, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> GetUsersInRoleAsync(string authToken, string role, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.GetUsersInRoleAsync(authToken, role, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC ListUserIdentities(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserIdentities(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfstringuHEDJ7DjVUqw3SxC> ListUserIdentitiesAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserIdentitiesAsync(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC GetUserProfile(string authToken, string uniqueIdentifier) {
            return base.Channel.GetUserProfile(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfSimpleNameValueCollectionVUqw3SxC> GetUserProfileAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.GetUserProfileAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType UpdateUserProfile(string authToken, string uniqueIdentifier, ListUsers.UserManagementService.SimpleNameValueCollection profile) {
            return base.Channel.UpdateUserProfile(authToken, uniqueIdentifier, profile);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> UpdateUserProfileAsync(string authToken, string uniqueIdentifier, ListUsers.UserManagementService.SimpleNameValueCollection profile) {
            return base.Channel.UpdateUserProfileAsync(authToken, uniqueIdentifier, profile);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring CreateUser(string authToken, string userName, string password, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists) {
            return base.Channel.CreateUser(authToken, userName, password, emailAddress, profile, updateIfExists);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> CreateUserAsync(string authToken, string userName, string password, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists) {
            return base.Channel.CreateUserAsync(authToken, userName, password, emailAddress, profile, updateIfExists);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring CreateNetworkUser(string authToken, string userName, string domain, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists) {
            return base.Channel.CreateNetworkUser(authToken, userName, domain, emailAddress, profile, updateIfExists);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> CreateNetworkUserAsync(string authToken, string userName, string domain, string emailAddress, ListUsers.UserManagementService.SimpleNameValueCollection profile, bool updateIfExists) {
            return base.Channel.CreateNetworkUserAsync(authToken, userName, domain, emailAddress, profile, updateIfExists);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserEmailAddress(string authToken, string userIdentity, string newEmailAddress) {
            return base.Channel.ChangeUserEmailAddress(authToken, userIdentity, newEmailAddress);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserEmailAddressAsync(string authToken, string userIdentity, string newEmailAddress) {
            return base.Channel.ChangeUserEmailAddressAsync(authToken, userIdentity, newEmailAddress);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserPassword(string authToken, string userIdentity, string newPassword) {
            return base.Channel.ChangeUserPassword(authToken, userIdentity, newPassword);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserPasswordAsync(string authToken, string userIdentity, string newPassword) {
            return base.Channel.ChangeUserPasswordAsync(authToken, userIdentity, newPassword);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring ChangeUserDomain(string authToken, string userName, string oldDomain, string newDomain) {
            return base.Channel.ChangeUserDomain(authToken, userName, oldDomain, newDomain);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> ChangeUserDomainAsync(string authToken, string userName, string oldDomain, string newDomain) {
            return base.Channel.ChangeUserDomainAsync(authToken, userName, oldDomain, newDomain);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUser(string authToken, string uniqueIdentifier, bool deleteResponses) {
            return base.Channel.DeleteUser(authToken, uniqueIdentifier, deleteResponses);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserAsync(string authToken, string uniqueIdentifier, bool deleteResponses) {
            return base.Channel.DeleteUserAsync(authToken, uniqueIdentifier, deleteResponses);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUsers(string authToken, string[] uniqueIdentifierList, bool deleteResponses) {
            return base.Channel.DeleteUsers(authToken, uniqueIdentifierList, deleteResponses);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUsersAsync(string authToken, string[] uniqueIdentifierList, bool deleteResponses) {
            return base.Channel.DeleteUsersAsync(authToken, uniqueIdentifierList, deleteResponses);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteResponsesOfUsers(string authToken, string[] uniqueIdentifierList) {
            return base.Channel.DeleteResponsesOfUsers(authToken, uniqueIdentifierList);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteResponsesOfUsersAsync(string authToken, string[] uniqueIdentifierList) {
            return base.Channel.DeleteResponsesOfUsersAsync(authToken, uniqueIdentifierList);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUserProfile(string authToken, string userIdentity) {
            return base.Channel.DeleteUserProfile(authToken, userIdentity);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserProfileAsync(string authToken, string userIdentity) {
            return base.Channel.DeleteUserProfileAsync(authToken, userIdentity);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring RenameUser(string authToken, string uniqueIdentifier, string newUniqueIdentifier) {
            return base.Channel.RenameUser(authToken, uniqueIdentifier, newUniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> RenameUserAsync(string authToken, string uniqueIdentifier, string newUniqueIdentifier) {
            return base.Channel.RenameUserAsync(authToken, uniqueIdentifier, newUniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfboolean UnlockUser(string authToken, string uniqueIdentifier) {
            return base.Channel.UnlockUser(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> UnlockUserAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.UnlockUserAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfboolean LockUser(string authToken, string uniqueIdentifier) {
            return base.Channel.LockUser(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> LockUserAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.LockUserAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfboolean UserExists(string authToken, string uniqueIdentifier) {
            return base.Channel.UserExists(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> UserExistsAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.UserExistsAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListUserRoles(string authToken, string uniqueIdentifier) {
            return base.Channel.ListUserRoles(authToken, uniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListUserRolesAsync(string authToken, string uniqueIdentifier) {
            return base.Channel.ListUserRolesAsync(authToken, uniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfRoleDataVUqw3SxC ListAllAvailableUserRoles(string authToken) {
            return base.Channel.ListAllAvailableUserRoles(authToken);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfRoleDataVUqw3SxC> ListAllAvailableUserRolesAsync(string authToken) {
            return base.Channel.ListAllAvailableUserRolesAsync(authToken);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUserToRole(string authToken, string uniqueIdentifier, string roleName) {
            return base.Channel.AddUserToRole(authToken, uniqueIdentifier, roleName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUserToRoleAsync(string authToken, string uniqueIdentifier, string roleName) {
            return base.Channel.AddUserToRoleAsync(authToken, uniqueIdentifier, roleName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromRole(string authToken, string uniqueIdentifier, string roleName) {
            return base.Channel.RemoveUserFromRole(authToken, uniqueIdentifier, roleName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromRoleAsync(string authToken, string uniqueIdentifier, string roleName) {
            return base.Channel.RemoveUserFromRoleAsync(authToken, uniqueIdentifier, roleName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC ListUserGroups(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserGroups(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC> ListUserGroupsAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserGroupsAsync(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC ListUserGroupsByPeriod(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName) {
            return base.Channel.ListUserGroupsByPeriod(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue, period, dateFieldName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserGroupDataVUqw3SxCVUqw3SxC> ListUserGroupsByPeriodAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue, int period, string dateFieldName) {
            return base.Channel.ListUserGroupsByPeriodAsync(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue, period, dateFieldName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfint CreateUserGroup(string authToken, string userGroupName, string userGroupDescription) {
            return base.Channel.CreateUserGroup(authToken, userGroupName, userGroupDescription);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfint> CreateUserGroupAsync(string authToken, string userGroupName, string userGroupDescription) {
            return base.Channel.CreateUserGroupAsync(authToken, userGroupName, userGroupDescription);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfint CopyUserGroup(string authToken, int groupId) {
            return base.Channel.CopyUserGroup(authToken, groupId);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfint> CopyUserGroupAsync(string authToken, int groupId) {
            return base.Channel.CopyUserGroupAsync(authToken, groupId);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfintuHEDJ7Dj CopyUserGroups(string authToken, int[] groupIdList) {
            return base.Channel.CopyUserGroups(authToken, groupIdList);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfintuHEDJ7Dj> CopyUserGroupsAsync(string authToken, int[] groupIdList) {
            return base.Channel.CopyUserGroupsAsync(authToken, groupIdList);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfstring RenameUserGroup(string authToken, int groupId, string newGroupName) {
            return base.Channel.RenameUserGroup(authToken, groupId, newGroupName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfstring> RenameUserGroupAsync(string authToken, int groupId, string newGroupName) {
            return base.Channel.RenameUserGroupAsync(authToken, groupId, newGroupName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType ChangeUserGroupDescription(string authToken, int groupId, string newGroupDescription) {
            return base.Channel.ChangeUserGroupDescription(authToken, groupId, newGroupDescription);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> ChangeUserGroupDescriptionAsync(string authToken, int groupId, string newGroupDescription) {
            return base.Channel.ChangeUserGroupDescriptionAsync(authToken, groupId, newGroupDescription);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteUserGroup(string authToken, int databaseID) {
            return base.Channel.DeleteUserGroup(authToken, databaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteUserGroupAsync(string authToken, int databaseID) {
            return base.Channel.DeleteUserGroupAsync(authToken, databaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj DeleteUserGroups(string authToken, int[] databaseIdList) {
            return base.Channel.DeleteUserGroups(authToken, databaseIdList);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> DeleteUserGroupsAsync(string authToken, int[] databaseIdList) {
            return base.Channel.DeleteUserGroupsAsync(authToken, databaseIdList);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUsersToGroup(string authToken, string[] userUniqueIdentifiers, int groupDatabaseID) {
            return base.Channel.AddUsersToGroup(authToken, userUniqueIdentifiers, groupDatabaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUsersToGroupAsync(string authToken, string[] userUniqueIdentifiers, int groupDatabaseID) {
            return base.Channel.AddUsersToGroupAsync(authToken, userUniqueIdentifiers, groupDatabaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromGroup(string authToken, int groupDatabaseID, string userUniqueIdentifier) {
            return base.Channel.RemoveUserFromGroup(authToken, groupDatabaseID, userUniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromGroupAsync(string authToken, int groupDatabaseID, string userUniqueIdentifier) {
            return base.Channel.RemoveUserFromGroupAsync(authToken, groupDatabaseID, userUniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUsersFromGroup(string authToken, int groupDatabaseID, string[] userUniqueIdentifiers) {
            return base.Channel.RemoveUsersFromGroup(authToken, groupDatabaseID, userUniqueIdentifiers);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUsersFromGroupAsync(string authToken, int groupDatabaseID, string[] userUniqueIdentifiers) {
            return base.Channel.RemoveUsersFromGroupAsync(authToken, groupDatabaseID, userUniqueIdentifiers);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveAllUsersFromGroup(string authToken, int groupDatabaseID) {
            return base.Channel.RemoveAllUsersFromGroup(authToken, groupDatabaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveAllUsersFromGroupAsync(string authToken, int groupDatabaseID) {
            return base.Channel.RemoveAllUsersFromGroupAsync(authToken, groupDatabaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType DeleteAllGroupMembersFromCheckBox(string authToken, int groupDatabaseID) {
            return base.Channel.DeleteAllGroupMembersFromCheckBox(authToken, groupDatabaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> DeleteAllGroupMembersFromCheckBoxAsync(string authToken, int groupDatabaseID) {
            return base.Channel.DeleteAllGroupMembersFromCheckBoxAsync(authToken, groupDatabaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType SetGroupDefaultPolicyPermissions(string authToken, int databaseID, string[] permissions) {
            return base.Channel.SetGroupDefaultPolicyPermissions(authToken, databaseID, permissions);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> SetGroupDefaultPolicyPermissionsAsync(string authToken, int databaseID, string[] permissions) {
            return base.Channel.SetGroupDefaultPolicyPermissionsAsync(authToken, databaseID, permissions);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType AddUserToGroupAccessList(string authToken, int securedGroupID, string userUnqiueIdentifier, string[] permissions) {
            return base.Channel.AddUserToGroupAccessList(authToken, securedGroupID, userUnqiueIdentifier, permissions);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddUserToGroupAccessListAsync(string authToken, int securedGroupID, string userUnqiueIdentifier, string[] permissions) {
            return base.Channel.AddUserToGroupAccessListAsync(authToken, securedGroupID, userUnqiueIdentifier, permissions);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType AddGroupToGroupAccessList(string authToken, int securedGroupID, int permissibleGroupID, string[] permissions) {
            return base.Channel.AddGroupToGroupAccessList(authToken, securedGroupID, permissibleGroupID, permissions);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> AddGroupToGroupAccessListAsync(string authToken, int securedGroupID, int permissibleGroupID, string[] permissions) {
            return base.Channel.AddGroupToGroupAccessListAsync(authToken, securedGroupID, permissibleGroupID, permissions);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveUserFromGroupAccessList(string authToken, int securedGroupId, string userUniqueIdentifier) {
            return base.Channel.RemoveUserFromGroupAccessList(authToken, securedGroupId, userUniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveUserFromGroupAccessListAsync(string authToken, int securedGroupId, string userUniqueIdentifier) {
            return base.Channel.RemoveUserFromGroupAccessListAsync(authToken, securedGroupId, userUniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfanyType RemoveGroupFromGroupAccessList(string authToken, int securedGroupID, int permissibleGroupID) {
            return base.Channel.RemoveGroupFromGroupAccessList(authToken, securedGroupID, permissibleGroupID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfanyType> RemoveGroupFromGroupAccessListAsync(string authToken, int securedGroupID, int permissibleGroupID) {
            return base.Channel.RemoveGroupFromGroupAccessListAsync(authToken, securedGroupID, permissibleGroupID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupDefaultPolicyPermissions(string authToken, int databaseID) {
            return base.Channel.ListGroupDefaultPolicyPermissions(authToken, databaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupDefaultPolicyPermissionsAsync(string authToken, int databaseID) {
            return base.Channel.ListGroupDefaultPolicyPermissionsAsync(authToken, databaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfAclEntryVUqw3SxC ListAllGroupAccessListEntries(string authToken, int databaseID) {
            return base.Channel.ListAllGroupAccessListEntries(authToken, databaseID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfAclEntryVUqw3SxC> ListAllGroupAccessListEntriesAsync(string authToken, int databaseID) {
            return base.Channel.ListAllGroupAccessListEntriesAsync(authToken, databaseID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupAccessListPermissionsForUser(string authToken, int securedGroupID, string userUniqueIdentifier) {
            return base.Channel.ListGroupAccessListPermissionsForUser(authToken, securedGroupID, userUniqueIdentifier);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupAccessListPermissionsForUserAsync(string authToken, int securedGroupID, string userUniqueIdentifier) {
            return base.Channel.ListGroupAccessListPermissionsForUserAsync(authToken, securedGroupID, userUniqueIdentifier);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj ListGroupAccessListPermissionsForGroup(string authToken, int securedGroupID, int permissibleGroupID) {
            return base.Channel.ListGroupAccessListPermissionsForGroup(authToken, securedGroupID, permissibleGroupID);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfstringuHEDJ7Dj> ListGroupAccessListPermissionsForGroupAsync(string authToken, int securedGroupID, int permissibleGroupID) {
            return base.Channel.ListGroupAccessListPermissionsForGroupAsync(authToken, securedGroupID, permissibleGroupID);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC GetUserGroupByName(string authToken, string groupName) {
            return base.Channel.GetUserGroupByName(authToken, groupName);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC> GetUserGroupByNameAsync(string authToken, string groupName) {
            return base.Channel.GetUserGroupByNameAsync(authToken, groupName);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC GetUserGroupById(string authToken, int groupId) {
            return base.Channel.GetUserGroupById(authToken, groupId);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfUserGroupDataVUqw3SxC> GetUserGroupByIdAsync(string authToken, int groupId) {
            return base.Channel.GetUserGroupByIdAsync(authToken, groupId);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListUserGroupMembers(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserGroupMembers(authToken, groupId, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListUserGroupMembersAsync(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUserGroupMembersAsync(authToken, groupId, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListUsersNotInGroup(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUsersNotInGroup(authToken, groupId, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListUsersNotInGroupAsync(string authToken, int groupId, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListUsersNotInGroupAsync(authToken, groupId, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListPotentialUsersForNewGroup(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListPotentialUsersForNewGroup(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListPotentialUsersForNewGroupAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListPotentialUsersForNewGroupAsync(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC ListCurrentUsersForNewGroup(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListCurrentUsersForNewGroup(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfPagedListResultOfArrayOfUserDataVUqw3SxCVUqw3SxC> ListCurrentUsersForNewGroupAsync(string authToken, int pageNumber, int pageSize, string sortField, bool sortAscending, string filterField, string filterValue) {
            return base.Channel.ListCurrentUsersForNewGroupAsync(authToken, pageNumber, pageSize, sortField, sortAscending, filterField, filterValue);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfboolean ListCurrentUsersForNewGroupAddUser(string authToken, string userId) {
            return base.Channel.ListCurrentUsersForNewGroupAddUser(authToken, userId);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> ListCurrentUsersForNewGroupAddUserAsync(string authToken, string userId) {
            return base.Channel.ListCurrentUsersForNewGroupAddUserAsync(authToken, userId);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfboolean ListCurrentUsersForNewGroupRemoveUser(string authToken, string userId) {
            return base.Channel.ListCurrentUsersForNewGroupRemoveUser(authToken, userId);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfboolean> ListCurrentUsersForNewGroupRemoveUserAsync(string authToken, string userId) {
            return base.Channel.ListCurrentUsersForNewGroupRemoveUserAsync(authToken, userId);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC SearchUsers(string authToken, string searchTerm) {
            return base.Channel.SearchUsers(authToken, searchTerm);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserDataVUqw3SxCVUqw3SxC> SearchUsersAsync(string authToken, string searchTerm) {
            return base.Channel.SearchUsersAsync(authToken, searchTerm);
        }
        
        public ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC SearchGroups(string authToken, string searchTerm) {
            return base.Channel.SearchGroups(authToken, searchTerm);
        }
        
        public System.Threading.Tasks.Task<ListUsers.UserManagementService.ServiceOperationResultOfArrayOfGroupedResultOfUserGroupDataVUqw3SxCVUqw3SxC> SearchGroupsAsync(string authToken, string searchTerm) {
            return base.Channel.SearchGroupsAsync(authToken, searchTerm);
        }
    }
}
